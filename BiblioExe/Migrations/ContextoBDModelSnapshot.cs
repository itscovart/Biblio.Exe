// <auto-generated />
using System;
using BiblioExe.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BiblioExe.Migrations
{
    [DbContext(typeof(ContextoBD))]
    partial class ContextoBDModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BiblioExe.Models.Administrador", b =>
                {
                    b.Property<int>("IDAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDAdmin"), 1L, 1);

                    b.Property<string>("Am")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("IDTipoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDAdmin");

                    b.HasIndex("IDTipoUsuario");

                    b.ToTable("Administrador");
                });

            modelBuilder.Entity("BiblioExe.Models.Alumno", b =>
                {
                    b.Property<string>("Boleta")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AM")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AP")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("IDCarrera")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Semestre")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.HasKey("Boleta");

                    b.HasIndex("IDCarrera");

                    b.ToTable("Alumno");
                });

            modelBuilder.Entity("BiblioExe.Models.Carrera", b =>
                {
                    b.Property<int>("IDCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCarrera"), 1L, 1);

                    b.Property<string>("DescCarrera")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("IDCarrera");

                    b.ToTable("Carrera");
                });

            modelBuilder.Entity("BiblioExe.Models.Categoria", b =>
                {
                    b.Property<int>("IDCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCategoria"), 1L, 1);

                    b.Property<string>("DescCategoria")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IDCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("BiblioExe.Models.DatosAlumno", b =>
                {
                    b.Property<string>("Boleta")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("FechaCaducidadToken")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDTipoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid?>("TokenRestauracion")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Boleta");

                    b.HasIndex("IDTipoUsuario");

                    b.ToTable("DatosAlumno");
                });

            modelBuilder.Entity("BiblioExe.Models.Estado", b =>
                {
                    b.Property<int>("IDEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDEstado"), 1L, 1);

                    b.Property<string>("EstadoNombre")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IDEstado");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("BiblioExe.Models.Libro", b =>
                {
                    b.Property<int>("IDLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDLibro"), 1L, 1);

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Editorial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IDCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDLibro");

                    b.HasIndex("IDCategoria");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("BiblioExe.Models.LibroExistencia", b =>
                {
                    b.Property<int>("IDLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDLibro"), 1L, 1);

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.HasKey("IDLibro");

                    b.ToTable("LibroExistencia");
                });

            modelBuilder.Entity("BiblioExe.Models.Materias", b =>
                {
                    b.Property<int>("IDMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDMateria"), 1L, 1);

                    b.Property<int>("Carrera")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Semestre")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.HasKey("IDMateria");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("BiblioExe.Models.Prestamo", b =>
                {
                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Boleta")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_final")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("IDEstado")
                        .HasColumnType("int");

                    b.Property<int>("IDLibro")
                        .HasColumnType("int");

                    b.Property<string>("Maestro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Materia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Folio");

                    b.HasIndex("Boleta");

                    b.HasIndex("IDEstado");

                    b.HasIndex("IDLibro");

                    b.ToTable("Prestamo");
                });

            modelBuilder.Entity("BiblioExe.Models.Profesores", b =>
                {
                    b.Property<int>("IDProfesor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDProfesor"), 1L, 1);

                    b.Property<string>("ApellidoM")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ApellidoP")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Carrera")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Semestre")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.HasKey("IDProfesor");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("BiblioExe.Models.SolicitudPrestamo", b =>
                {
                    b.Property<int>("IDSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDSolicitud"), 1L, 1);

                    b.Property<string>("Boleta")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_final")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Grupo")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("IDLibro")
                        .HasColumnType("int");

                    b.Property<string>("Maestro")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Materia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IDSolicitud");

                    b.HasIndex("Boleta");

                    b.HasIndex("IDLibro");

                    b.ToTable("SolicitudPrestamo");
                });

            modelBuilder.Entity("BiblioExe.Models.TipoUsuario", b =>
                {
                    b.Property<string>("IDTipoUsuario")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("DescTipo")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("IDTipoUsuario");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("BiblioExe.Models.Administrador", b =>
                {
                    b.HasOne("BiblioExe.Models.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("IDTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("BiblioExe.Models.Alumno", b =>
                {
                    b.HasOne("BiblioExe.Models.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("IDCarrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("BiblioExe.Models.DatosAlumno", b =>
                {
                    b.HasOne("BiblioExe.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("Boleta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiblioExe.Models.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("IDTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("BiblioExe.Models.Libro", b =>
                {
                    b.HasOne("BiblioExe.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("IDCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("BiblioExe.Models.Prestamo", b =>
                {
                    b.HasOne("BiblioExe.Models.Alumno", "Alumno")
                        .WithMany()
                        .HasForeignKey("Boleta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiblioExe.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("IDEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiblioExe.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("IDLibro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Estado");

                    b.Navigation("Libro");
                });

            modelBuilder.Entity("BiblioExe.Models.SolicitudPrestamo", b =>
                {
                    b.HasOne("BiblioExe.Models.Alumno", "BoletaAlumno")
                        .WithMany()
                        .HasForeignKey("Boleta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BiblioExe.Models.Libro", "Libro")
                        .WithMany()
                        .HasForeignKey("IDLibro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoletaAlumno");

                    b.Navigation("Libro");
                });
#pragma warning restore 612, 618
        }
    }
}
